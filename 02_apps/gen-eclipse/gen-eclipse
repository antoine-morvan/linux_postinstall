#!/bin/bash

####################################################################
##	Setup Script
####################################################################
#
# Helper script to setup a proper Eclipse environment. Setups  
# Eclipse in the given folder, initializes the workspace with few 
# parameters, fix GTK2 startup, and install plugins. By default, 
# CDT, Maven, Gradle, JAXB, WebTools, and XText plugins.
#
####################################################################

## TODO:
# redmine
# gradle?

export MIRROR_URL=http://home.koub.org/files/

if [ "$2" != "" ]; then
	export MIRROR_URL=$2
fi

ECLIPSE_VERSION=neon
ECLIPSE_PRE=2

DARKTHEME=YES

#useful plugins
SETUP_SVN=YES 	# SVN Client
SETUP_EASYSHELL=YES		# External Terminal
SETUP_ANYEDITTOOLS=YES  # UI enhancement
SETUP_FINDBUGS=YES		# More error/warnings

SETUP_GRADLE=YES		# Web Tool Plugins
SETUP_ECLEMMAJCC=YES	# Java Code Coverage
SETUP_JAUTODOC=YES		# Java AutoDoc

SETUP_WTP=YES			# Web Tool Plugins
SETUP_JAVAFX=YES		# JavaFX Design Tools
SETUP_PHOTRAN=YES		# Fortran support (from PTP)
SETUP_DLTK=YES			# Dynamic Languages Toolkit

#specific plugins (deprecated)
SETUP_TEXCLIPSE=YES 	# latex support in eclipse

#causing annoying behavior
SETUP_EASE=NO			# Eclipse Advanced Scripting Environment

#failing ..
SETUP_PTP=NO			# Parallel Tools
SETUP_CUP_LEX=NO   		#cup & lex (similar to yacc & lex, but in java)
SETUP_TOMCAT=NO			# Tomcat plugin
SETUP_GRECLIPSE=NO 		#groovy for eclipse

#CAIRN plugins (deprecated)
SETUP_TOM=NO
SETUP_JNIMAP=NO
SETUP_GECOS_SCRIPT=NO
SETUP_GECOS_UI=NO

#if set to YES, skip generic & tmf plugins 
FAST=NO

##################################
##	Check script configuration
##################################

USER=`whoami`
[ "$USER" == "root" ] && echo "Should not be run as root" && exit 1

HOMEDIR=$HOME
[ ! -d ${HOMEDIR} ] && HOMEDIR=`cat /etc/passwd | grep "$USER" | cut -d":" -f 6`
[ ! -d ${HOMEDIR} ] && echo "Could not locate Home directory (${HOMEDIR})" && exit 1

JAVA8=`java -version 2>&1 | grep 1.8 | wc -l`
[ "$JAVA8" == "0" ] && JAVA9=`java -version 2>&1 | grep 1.9 | wc -l`
if [ "$JAVA9" == "0" ]; then
	echo "GeCoS requires Java 7 or higher. On debian like systems (as root) :"
	echo "   $ apt-get install openjdk-8-jdk openjdk-8-source"
	echo "   $ JVM=\`update-java-alternatives -l | grep 1.8 | cut -d\" \" -f 1\`"
	echo "   $ update-java-alternatives -s \$JVM"
	exit 1
fi

if [ "$1" == "" ];
then
	echo "Folder installation path: "
	read installationpath
else
	installationpath="$1"
fi

if [ -d "${installationpath}" ];
then 
	if [ -d "${installationpath}/eclipse" ];
	then 
		echo "Error: eclipse folder already exist at the location specified"
		exit 1
	fi
	if [ -d "${installationpath}/workspace" ];
	then
		echo "Error: workspace folder already exist at the location specified"
		exit 1
	fi
else
	mkdir -p ${installationpath}
fi

installationpath=`(cd ${installationpath} && echo $PWD)`

#test write permission
[ ! -w ${installationpath} ] && echo "Cannot write into ${installationpath}" && exit 1
echo ""
echo "Installing in ${installationpath}."
echo ""
ECLIPSE=${installationpath}/eclipse/eclipse

SYSTEM=`uname -s`
ARCH=`uname -m`
ECLIPSE_SUF=
if [ "${ARCH}" == "x86_64" ];
then
	ECLIPSE_SUF=-x86_64
fi

if [ "${SYSTEM}" == "Darwin" ];
then
	ECLIPSE_PLATFORM=macosx-cocoa
	WGET=curl
	WGET_OPT=-o
	INIT_FOLDER="./Eclipse.app/Contents/MacOS/"
else
	if [ "${SYSTEM}" == "Linux" ];
	then
		ECLIPSE_PLATFORM=linux-gtk
		WGET=wget
		WGET_OPT=-O
		INIT_FOLDER=
	else
		echo "Unsupported operating system : ${SYSTEM}"
		exit 1
		#ECLIPSE_PLATFORM=win32
		#WGET=wget
		#WGET_OPT=-O
		#INIT_FOLDER=
	fi
fi



##################################
##	Setup Eclipse
##################################
# Eclipse mars modeling download and unrar
${WGET} ${MIRROR_URL}/eclipse-modeling-${ECLIPSE_VERSION}-${ECLIPSE_PRE}-${ECLIPSE_PLATFORM}${ECLIPSE_SUF}.tar.gz ${WGET_OPT} /tmp/eclipse.tar.gz
tar -xf /tmp/eclipse.tar.gz -C ${installationpath}
rm /tmp/eclipse.tar.gz
mv ${installationpath}/eclipse/${INIT_FOLDER}/eclipse.ini /tmp/eclipse.ini
mkdir -p ${HOMEDIR}/.eclipse
#Fix eclipse.ini : disable secure storage prompt
echo "secret" > ${HOMEDIR}/.eclipse/master
echo -e "-eclipse.password\n${HOMEDIR}/.eclipse/master" > ${installationpath}/eclipse/${INIT_FOLDER}/eclipse.ini
#Fix eclipse.ini : force GTK2
if [ "$ECLIPSE_PLATFORM" == "linux-gtk" ]; then
	echo -e "--launcher.GTK_version\n2" >> ${installationpath}/eclipse/${INIT_FOLDER}/eclipse.ini
fi
cat /tmp/eclipse.ini >> ${installationpath}/eclipse/${INIT_FOLDER}/eclipse.ini
rm /tmp/eclipse.ini

#initialize configuration
cat ${installationpath}/eclipse/configuration/config.ini | grep -v "osgi.instance.area.default" > /tmp/config.ini.tmp
mv /tmp/config.ini.tmp ${installationpath}/eclipse/configuration/config.ini
rm -f /tmp/config.ini.tmp
cat >> ${installationpath}/eclipse/configuration/config.ini << EOL
osgi.instance.area.default=${installationpath}/workspace
EOL
mkdir -p ${installationpath}/workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/

#setup splash screen
#PLUGIN_PATH=`find ${installationpath}/eclipse/plugins/ -name "*org.eclipse.platform_*" | sort | tail -n 1`
#mv ${PLUGIN_PATH}/splash.bmp ${PLUGIN_PATH}/splash.bmp.bk
#${WGET} http://polyweb.irisa.fr/gecos/splash_gecos_luna.bmp ${WGET_OPT} ${PLUGIN_PATH}/splash.bmp

##################################
##	Setup Eclipse plug-ins
##################################

echo ""
echo " * setup color theme"
echo ""
${ECLIPSE} -nosplash \
  -application org.eclipse.equinox.p2.director \
  -repository http://eclipse-color-theme.github.io/update/ \
  -destination ${installationpath}/eclipse/ \
  -installIU com.github.eclipsecolortheme.feature.feature.group
COLORTHEME_RESULT=$?
	  

if [ "$FAST" != "YES" ]; then 
	echo ""
	echo " * setup from ${ECLIPSE_VERSION} repo (cdt, xml, web, m2e, ...)"
	echo ""
	${ECLIPSE} -nosplash \
	  -application org.eclipse.equinox.p2.director \
	  -repository http://download.eclipse.org/releases/${ECLIPSE_VERSION} \
	  -destination ${installationpath}/eclipse/ \
	  -installIU org.eclipse.cdt.feature.group \
	  -installIU org.eclipse.cdt.platform.feature.group \
	  -installIU org.eclipse.cdt.gnu.dsf.feature.group \
	  -installIU org.eclipse.cdt.gnu.build.feature.group \
	  -installIU org.eclipse.cdt.gnu.debug.feature.group \
	  -installIU org.eclipse.cdt.gdb.feature.group \
	  -installIU org.eclipse.cdt.debug.standalone.feature.group \
	  -installIU org.eclipse.jst.web_ui.feature.feature.group \
	  -installIU org.eclipse.jpt.jpa.feature.feature.group \
	  -installIU org.eclipse.jpt.jpadiagrameditor.feature.feature.group \
	  -installIU org.eclipse.wst.xsl.feature.feature.group \
	  -installIU org.eclipse.wst.xml_ui.feature.feature.group \
	  -installIU org.eclipse.wst.web_ui.feature.feature.group \
	  -installIU org.eclipse.m2e.feature.feature.group \
	  -installIU org.sonatype.m2e.mavenarchiver.feature.feature.group \
	  -installIU org.eclipse.m2e.wtp.feature.feature.group \
	  -installIU org.eclipse.jpt.jaxb.feature.feature.group \
	  -installIU org.eclipse.tm.terminal.feature.feature.group \
	  -installIU org.eclipse.stardust.modeling.wst-feature.feature.group \
	  -installIU org.eclipse.egit.gitflow.feature.feature.group \
	  -installIU org.eclipse.egit.feature.group \
	  -installIU org.eclipse.linuxtools.changelog.feature.group
	  
	BASE_RESULT=$?

	echo ""
	echo " * Setup Xtet/Xtend/Mwe/Ecore"
	echo ""
	${ECLIPSE} -nosplash \
	  -application org.eclipse.equinox.p2.director \
	  -repository http://download.eclipse.org/releases/${ECLIPSE_VERSION} \
	  -destination ${installationpath}/eclipse/ \
	  -installIU org.eclipse.emf.ecoretools.sdk.feature.group \
	  -installIU org.eclipse.emf.mwe2.runtime.sdk.feature.group \
	  -installIU org.eclipse.xtend.sdk.feature.group \
	  -installIU org.eclipse.xtext.sdk.feature.group
	TMF_RESULT=$?
fi


echo ""
echo " * Setup Tycho"
echo ""
${ECLIPSE} -nosplash \
  -application org.eclipse.equinox.p2.director \
  -repository http://repo1.maven.org/maven2/.m2e/connectors/m2eclipse-tycho/0.8.0/N/0.8.0.201409231215/ \
  -destination ${installationpath}/eclipse/ \
  -installIU org.sonatype.tycho.m2e.feature.feature.group
TYCHO_RESULT=$?


echo ""
echo " * Setup Releng Tools"
echo ""
${ECLIPSE} -nosplash \
  -application org.eclipse.equinox.p2.director \
  -repository http://download.eclipse.org/eclipse/updates/4.6 \
  -destination ${installationpath}/eclipse/ \
  -installIU org.eclipse.releng.tools.feature.group
RELENG_RESULT=$?



if [ "$SETUP_DLTK" == "YES" ]; then
	echo ""
	echo " * setup Dynamic Language ToolKit"
	echo ""
	
	
	${ECLIPSE} -nosplash \
	  -application org.eclipse.equinox.p2.director \
	  -repository http://download.eclipse.org/releases/${ECLIPSE_VERSION} \
	  -destination ${installationpath}/eclipse/ \
	  -installIU org.eclipse.dltk.itcl.feature.group \
	  -installIU org.eclipse.dltk.ruby.feature.group \
	  -installIU org.eclipse.dltk.sh.feature.group
	DLTK_RESULT=$?
fi


if [ "$SETUP_GRADLE" == "YES" ]; then
	echo ""
	echo " * setup Gradle (buildship)"
	echo ""
	${ECLIPSE} -nosplash \
	  -application org.eclipse.equinox.p2.director \
	  -repository http://download.eclipse.org/buildship/updates/e46/releases/1.0 \
	  -destination ${installationpath}/eclipse/ \
	  -installIU org.eclipse.buildship.feature.group
	GRADLE_RESULT=$?
	
fi

if [ "$SETUP_SVN" == "YES" ]; then
	echo ""
	echo " * setup svn"
	echo ""
	${ECLIPSE} -nosplash \
	  -application org.eclipse.equinox.p2.director \
	  -repository http://download.eclipse.org/releases/${ECLIPSE_VERSION} \
	  -destination ${installationpath}/eclipse/ \
	  -installIU org.eclipse.team.svn.feature.group
	SVN_RESULT=$?
	
	echo ""
	echo " * Setup subversive"
	echo ""
	${ECLIPSE} -nosplash \
	  -application org.eclipse.equinox.p2.director \
	  -repository http://community.polarion.com/projects/subversive/download/eclipse/6.0/neon-site/ \
	  -destination ${installationpath}/eclipse/ \
	  -installIU org.polarion.eclipse.team.svn.connector.feature.group \
	  -installIU org.polarion.eclipse.team.svn.connector.svnkit18.feature.group
	SUBVERSIVE_RESULT=$?
fi

if [ "$SETUP_EASYSHELL" == "YES" ]; then
	echo ""
	echo " * Setup easyshell"
	echo ""
	${ECLIPSE} -nosplash \
	  -application org.eclipse.equinox.p2.director \
	  -repository http://anb0s.github.io/EasyShell \
	  -destination ${installationpath}/eclipse/ \
	  -installIU de.anbos.eclipse.easyshell.feature.feature.group
	EASYSHELL_RESULT=$?
fi

if [ "$SETUP_TEXCLIPSE" == "YES" ]; then
	echo ""
	echo " * Setup texclipse"
	echo ""
	${ECLIPSE} -nosplash \
	  -application org.eclipse.equinox.p2.director \
	  -repository http://texlipse.sourceforge.net \
	  -destination ${installationpath}/eclipse/ \
	  -installIU net.sourceforge.texlipse.feature.group
	TEXCLIPSE_RESULT=$?
fi

if [ "$SETUP_CUP_LEX" == "YES" ]; then
	echo ""
	echo " * Setup cup/lex"
	echo ""
	${ECLIPSE} -nosplash \
	  -application org.eclipse.equinox.p2.director \
	  -repository http://cup-lex-eclipse.sourceforge.net/update/ \
	  -destination ${installationpath}/eclipse/ \
	  -installIU pi.eclipse.cle.feature.group
	CUP_LEX_RESULT=$?
fi

if [ "$SETUP_TOM" == "YES" ]; then
	echo ""
	echo " * Setup TOM"
	echo ""
	${ECLIPSE} -nosplash \
	  -application org.eclipse.equinox.p2.director \
	  -repository http://gecos.gforge.inria.fr/updates/mars/snapshot/ \
	  -destination ${installationpath}/eclipse/ \
	  -installIU cairn.tools.tom.dev.feature.group
	TOM_RESULT=$?
fi

if [ "$SETUP_JNIMAP" == "YES" ]; then
	echo ""
	echo " * Setup jnimap"
	echo ""
	${ECLIPSE} -nosplash \
	  -application org.eclipse.equinox.p2.director \
	  -repository http://gecos.gforge.inria.fr/updates/mars/snapshot/ \
	  -destination ${installationpath}/eclipse/ \
	  -installIU cairn.tools.jni.mapper.feature.group
	JNIMAP_RESULT=$?
fi

if [ "$SETUP_GECOS_SCRIPT" == "YES" ]; then
	echo ""
	echo " * Setup gecos scripts"
	echo ""
	${ECLIPSE} -nosplash \
	  -application org.eclipse.equinox.p2.director \
	  -repository http://gecos.gforge.inria.fr/updates/mars/snapshot/ \
	  -destination ${installationpath}/eclipse/ \
	  -installIU gecos.framework.feature.group
	GECOS_SCRIPT_RESULT=$?
fi

if [ "$SETUP_GECOS_UI" == "YES" ]; then
	echo ""
	echo " * Setup gecos UI"
	echo ""
	${ECLIPSE} -nosplash \
	  -application org.eclipse.equinox.p2.director \
	  -repository http://gecos.gforge.inria.fr/updates/mars/snapshot/ \
	  -destination ${installationpath}/eclipse/ \
	  -installIU gecos.ui.feature.group \
	  -installIU gecos.alma.feature.group
	GECOS_UI_RESULT=$?
fi

if [ "$SETUP_GRECLIPSE" == "YES" ]; then
	echo ""
	echo " * Setup greclipse (groovy)"
	echo ""
	${ECLIPSE} -nosplash \
	  -application org.eclipse.equinox.p2.director \
	  -repository http://dist.springsource.org/snapshot/GRECLIPSE/e4.5/ \
	  -destination ${installationpath}/eclipse/ \
	  -installIU org.codehaus.groovy.eclipse.feature.feature.group \
	  -installIU org.codehaus.groovy.m2eclipse.feature.feature.group \
	  -installIU org.codehaus.groovy.jdt.patch.feature.group \
	  -installIU org.codehaus.groovy24.feature.feature.group
	GRECLIPSE_RESULT=$?
fi

if [ "$SETUP_ECLEMMAJCC" == "YES" ]; then
	echo ""
	echo " * Setup eclemmajcc (code coverage)"
	echo ""
	${ECLIPSE} -nosplash \
	  -application org.eclipse.equinox.p2.director \
	  -repository http://update.eclemma.org/ \
	  -destination ${installationpath}/eclipse/ \
	  -installIU com.mountainminds.eclemma.feature.feature.group
	ECLEMMAJCC_RESULT=$?
fi

if [ "$SETUP_JAUTODOC" == "YES" ]; then
	echo ""
	echo " * Setup JAutodoc"
	echo ""
	${ECLIPSE} -nosplash \
	  -application org.eclipse.equinox.p2.director \
	  -repository http://jautodoc.sourceforge.net/update/ \
	  -destination ${installationpath}/eclipse/ \
	  -installIU net.sf.jautodoc.feature.feature.group
	JAUTODOC_RESULT=$?
fi

if [ "$SETUP_ANYEDITTOOLS" == "YES" ]; then
	echo ""
	echo " * Setup anyedit tools"
	echo ""
	${ECLIPSE} -nosplash \
	  -application org.eclipse.equinox.p2.director \
	  -repository http://andrei.gmxhome.de/eclipse/ \
	  -destination ${installationpath}/eclipse/ \
	  -installIU AnyEditTools.feature.group
	ANYEDITTOOLS_RESULT=$?
fi

if [ "$SETUP_FINDBUGS" == "YES" ]; then
	echo ""
	echo " * Setup findbugs"
	echo ""
	${ECLIPSE} -nosplash \
	  -application org.eclipse.equinox.p2.director \
	  -repository http://findbugs.cs.umd.edu/eclipse/ \
	  -destination ${installationpath}/eclipse/ \
	  -installIU edu.umd.cs.findbugs.plugin.eclipse.feature.group
	FINDBUGS_RESULT=$?
fi

if [ "$SETUP_TOMCAT" == "YES" ]; then
	echo ""
	echo " * Setup Tocmat"
	echo ""
	${ECLIPSE} -nosplash \
	  -application org.eclipse.equinox.p2.director \
	  -repository https://sourceforge.net/projects/tomcatplugin/files/updatesite/ \
	  -destination ${installationpath}/eclipse/ \
	  -installIU net.sf.eclipse.tomcat.feature.feature.group
	TOMCAT_RESULT=$?
fi

if [ "$SETUP_PTP" == "YES" ]; then
	echo ""
	echo " * Setup Parallel Tools"
	echo ""
	
	${ECLIPSE} -nosplash \
	  -application org.eclipse.equinox.p2.director \
	  -repository http://download.eclipse.org/releases/${ECLIPSE_VERSION} \
	  -destination ${installationpath}/eclipse/ \
	  -installIU org.eclipse.cdt.bupc.feature.group \
	  -installIU org.eclipse.cdt.core.parser.upc.feature.feature.group \
	  -installIU org.eclipse.cdt.core.parser.upc.sdk.feature.group \
	  -installIU org.eclipse.ptp.rdt.sync.cdt.feature.group \
	  -installIU org.eclipse.cdt.core.parser.upc.source.feature.group \
	  -installIU org.eclipse.tm.terminal.connector.remote.feature.feature.group
	PTP_PRE_RESULT=$?
	  
	${ECLIPSE} -nosplash \
	  -application org.eclipse.equinox.p2.director \
	  -repository http://download.eclipse.org/tools/ptp/updates/neon/ \
	  -destination ${installationpath}/eclipse/ \
	  -installIU org.eclipse.ptp.feature.group \
	  -installIU org.eclipse.ptp.sdk.feature.group \
	  -installIU org.eclipse.ptp.rm.jaxb.contrib.feature.group \
	  -installIU org.eclipse.ptp.etfw.feedback.perfsuite.feature.group \
	  -installIU org.eclipse.ptp.etfw.tau.feature.group \
	  -installIU org.eclipse.ptp.etfw.tau.fortran.feature.group \
	  -installIU org.eclipse.ptp.fortran.feature.group \
	  -installIU org.eclipse.ptp.gem.feature.group \
	  -installIU org.eclipse.ptp.pldt.fortran.feature.group \
	  -installIU org.eclipse.ptp.pldt.upc.feature.group \
	  -installIU org.eclipse.ptp.sci.feature.group \
	  -installIU org.eclipse.ptp.debug.sdm.feature.group
	PTP_RESULT=$?
fi

if [ "$SETUP_PHOTRAN" == "YES" ]; then
	echo ""
	echo " * Setup Photran (from PTP)"
	echo ""
	${ECLIPSE} -nosplash \
	  -application org.eclipse.equinox.p2.director \
	  -repository http://download.eclipse.org/tools/ptp/updates/neon/ \
	  -destination ${installationpath}/eclipse/ \
	  -installIU org.eclipse.photran.feature.group \
	  -installIU org.eclipse.photran.xlf.feature.group \
	  -installIU org.eclipse.photran.intel.feature.group
	  #-installIU org.eclipse.ptp.rdt.sync.fortran.feature.group
	PHOTRAN_RESULT=$?
fi

if [ "$SETUP_WTP" == "YES" ]; then
	echo ""
	echo " * Setup WTP"
	echo ""
	${ECLIPSE} -nosplash \
	  -application org.eclipse.equinox.p2.director \
	  -repository http://download.eclipse.org/webtools/repository/neon/ \
	  -destination ${installationpath}/eclipse/ \
	  -installIU org.eclipse.jst.ws.cxf.feature.feature.group \
	  -installIU org.eclipse.jpt.common.eclipselink.feature.feature.group \
	  -installIU org.eclipse.jpt.dbws.eclipselink.feature.feature.group \
	  -installIU org.eclipse.jpt.jaxb.eclipselink.feature.feature.group \
	  -installIU org.eclipse.jpt.jpa.eclipselink.feature.feature.group \
	  -installIU org.eclipse.jst.ws.jaxws.dom.feature.feature.group \
	  -installIU org.eclipse.jst.ws.jaxws.feature.feature.group \
	  -installIU org.eclipse.jsf.feature.feature.group \
	  -installIU org.eclipse.jst.jsf.apache.trinidad.tagsupport.feature.feature.group \
	  -installIU org.eclipse.jst.webpageeditor.feature.feature.group \
	  -installIU org.eclipse.jst.server_adapters.feature.feature.group \
	  -installIU org.eclipse.jst.server_adapters.ext.feature.feature.group \
	  -installIU org.eclipse.jst.server_ui.feature.feature.group \
	  -installIU org.eclipse.wst.server_adapters.feature.feature.group
	WTP_RESULT=$?
fi

if [ "$SETUP_JAVAFX" == "YES" ]; then
	echo ""
	echo " * Setup JavaFX"
	echo ""
	${ECLIPSE} -nosplash \
	  -application org.eclipse.equinox.p2.director \
	  -repository http://download.eclipse.org/efxclipse/updates-released/2.4.0/site \
	  -destination ${installationpath}/eclipse/ \
	  -installIU org.eclipse.fx.ide.feature.feature.group
	JAVAFX_RESULT=$?
fi

if [ "$SETUP_EASE" == "YES" ]; then
	echo ""
	echo " * Setup EASE"
	echo ""
	${ECLIPSE} -nosplash \
	  -application org.eclipse.equinox.p2.director \
	  -repository http://download.eclipse.org/ease/update/release \
	  -destination ${installationpath}/eclipse/ \
	  -installIU org.eclipse.ease.modules.charting.feature.feature.group \
	  -installIU org.eclipse.ease.modules.team.git.feature.feature.group \
	  -installIU org.eclipse.ease.lang.javascript.feature.feature.group \
	  -installIU org.eclipse.ease.lang.jvm.feature.feature.group \
	  -installIU org.eclipse.ease.python.jython.feature.feature.group \
	  -installIU org.eclipse.ease.modules.modeling.feature.feature.group \
	  -installIU org.eclipse.ease.modules.feature.feature.group \
	  -installIU org.eclipse.ease.lang.python.feature.feature.group \
	  -installIU org.eclipse.ease.lang.python.py4j.feature.feature.group \
	  -installIU org.eclipse.ease.modules.unittest.feature.feature.group \
	  -installIU org.eclipse.ease.lang.groovy.feature.feature.group \
	  -installIU org.eclipse.ease.lang.ruby.feature.feature.group
	EASE_RESULT=$?
fi


echo ""
echo "####"
echo "#### CONFIGURATION "
echo "####"


##################################
##	Config Eclipse workspace
##################################

#Config Xtend compiler
cat > ${installationpath}/workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.xtend.core.Xtend.prefs << EOF
eclipse.preferences.version=1
outlet.DEFAULT_OUTPUT.cleanupDerived=false
outlet.DEFAULT_OUTPUT.derived=false
EOF

if [ "$DARKTHEME" == "YES" ]; then
	cat > ${installationpath}/workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.e4.ui.css.swt.theme.prefs << EOF
themeid=org.eclipse.e4.ui.css.theme.high-contrast
EOF

	#config theme dark
	cat > ${installationpath}/workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.e4.ui.css.swt.theme << EOF
	themeid=org.eclipse.e4.ui.css.theme.high-contrast
EOF

	#config tm terminal
	cat > ${installationpath}/workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.tm.terminal.control.prefs << EOF
TerminalPrefInvertColors=true
EOF
fi

if [ "$SETUP_SVN" == "YES" ]; then
#Config SVN Console output
cat > ${installationpath}/workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.team.svn.ui.prefs << "EOF"
eclipse.preferences.version=1
preference.console.autoshow=1
preference.console.limitEnabled=false
EOF

#Force SVN Decorators in worksapce
cat > ${installationpath}/workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.ui.workbench.prefs << "EOF"
eclipse.preferences.version=1
ENABLED_DECORATORS=org.eclipse.team.svn.ui.decorator.SVNLightweightDecorator\:true,
EOF
fi

#Open SVG/HTML files with internet browser by default
INTERNET_BROWSER=none
if [ "`which iceweasel | wc -l`" == "1" ]; then
	INTERNET_BROWSER=iceweasel
else
	if [ "`which firefox | wc -l`" == "1" ]; then
		INTERNET_BROWSER=firefox
	fi
fi
if [ "${INTERNET_BROWSER}" != "none" ]; then
	cat >> ${installationpath}/workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.ui.workbench.prefs << EOF
editors=<?xml version\="1.0" encoding\="UTF-8"?>\n<editors>\n<descriptor file\="${INTERNET_BROWSER}" id\="${INTERNET_BROWSER}" internal\="false" label\="${INTERNET_BROWSER}" openMode\="4" open_in_place\="false" program_name\="${INTERNET_BROWSER}"/>\n</editors>
resourcetypes=<?xml version\="1.0" encoding\="UTF-8"?>\n<editors version\="3.1">\n<info extension\="svg" name\="*">\n<editor id\="${INTERNET_BROWSER}"/>\n<defaultEditor id\="${INTERNET_BROWSER}"/>\n</info>\n<info extension\="htm" name\="*">\n<editor id\="${INTERNET_BROWSER}"/>\n<defaultEditor id\="${INTERNET_BROWSER}"/>\n</info>\n<info extension\="html" name\="*">\n<editor id\="${INTERNET_BROWSER}"/>\n<defaultEditor id\="${INTERNET_BROWSER}"/>\n</info>\n</editors>
EOF
fi

#skip wizard tab on startup
mkdir -p ${installationpath}/workspace/.metadata/.plugins/org.eclipse.ui.intro/
cat > ${installationpath}/workspace/.metadata/.plugins/org.eclipse.ui.intro/introstate << "EOF"
<?xml version="1.0" encoding="UTF-8"?>
<state reopen="false"/>
EOF

#Config skip workspace selection
mkdir -p ${installationpath}/eclipse/configuration/.settings/
cat > ${installationpath}/eclipse/configuration/.settings/org.eclipse.ui.ide.prefs << "EOF"
SHOW_WORKSPACE_SELECTION_DIALOG=false
eclipse.preferences.version=1
EOF

#Always exit without prompt
cat > ${installationpath}/workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.ui.ide.prefs << "EOF"
EXIT_PROMPT_ON_CLOSE_LAST_WINDOW=false
REFRESH_WORKSPACE_ON_STARTUP=true
eclipse.preferences.version=1
EOF


if [ "$SETUP_EASYSHELL" == "YES" ]; then
#Config Easyshell terminal & explorer
cat > ${installationpath}/workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/com.tetrade.eclipse.plugins.easyshell.prefs << EOF
IdStr=cmdUnknown
eclipse.preferences.version=1
listPreference=-1
targetRunPreference=cd {1} && run ./''{3}''
EOF
TERMS="terminator xfce4-terminal gnome-terminal konsole urxvtc"
for term in ${TERMS}; do
	if [ ! -z `which ${term}` -a -x `which ${term}` ];
	then
		case ${term} in
			terminator)
				echo "targetPreference=terminator --working-directory\\={1}" >> ${installationpath}/workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/com.tetrade.eclipse.plugins.easyshell.prefs
				;;
			xfce4-terminal)
				echo "targetPreference=xfce4-terminal --default-working-directory\\={1}" >> ${installationpath}/workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/com.tetrade.eclipse.plugins.easyshell.prefs
				;;
			gnome-terminal)
				echo "targetPreference=gnome-terminal --working-directory\\={1}" >> ${installationpath}/workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/com.tetrade.eclipse.plugins.easyshell.prefs
				;;
			konsole)
				echo "targetPreference=konsole --workdir {1}" >> ${installationpath}/workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/com.tetrade.eclipse.plugins.easyshell.prefs
				;;
			urxvtc)
				echo "targetPreference=urxvtc -cd  {1}" >> ${installationpath}/workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/com.tetrade.eclipse.plugins.easyshell.prefs
				;;
			*)
				echo "unknown terminal ${term}"
				;;
		esac
		break
	fi
done
NAVS="thunar nautilus konqueror firefox"
for nav in ${NAVS}; do
	if [ ! -z `which ${nav}` -a -x `which ${nav}` ];
	then
		case ${nav} in
			thunar)
				echo "targetExplorePreference=thunar {2}" >> ${installationpath}/workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/com.tetrade.eclipse.plugins.easyshell.prefs
				;;
			nautilus)
				echo "targetExplorePreference=nautilus {2}" >> ${installationpath}/workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/com.tetrade.eclipse.plugins.easyshell.prefs
				;;
			konqueror)
				echo "targetExplorePreference=konqueror file:\"{2}\"" >> ${installationpath}/workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/com.tetrade.eclipse.plugins.easyshell.prefs
				;;
			firefox)
				echo "targetExplorePreference=firefox file:\"{2}\"" >> ${installationpath}/workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/com.tetrade.eclipse.plugins.easyshell.prefs
				;;
			*)
				echo "unknown file explorer ${nav}"
				;;
		esac
		break
	fi
done
fi


# DEPRECATED
#config Tom/Gom
cat > ${installationpath}/workspace/.metadata/.plugins/org.eclipse.core.runtime/.settings/fr.loria.eclipse.tom.prefs << EOF 
eclipse.preferences.version=1
included_file_location=${installationpath}/workspace/eu.alma.matlab/src-gen/tom\:${installationpath}/workspace/eu.alma.matlab.frontend/src-tom\:${installationpath}/workspace/fr.irisa.cairn.gecos.model/src-gen/tom\:${installationpath}/workspace/fr.irisa.cairn.gecos.model.scop/src-gen/tom\:${installationpath}/workspace/org.polymodel.algebra/src-gen/tom\:${installationpath}/workspace/org.polymodel.polyhedralIR/src-gen/tom\:${installationpath}/workspace/org.polymodel.scop/src-gen/tom\:${installationpath}/workspace/org.polymodel.scop.dtiler/src-tom\:
EOF

CLEANUP_SCRIPT=${installationpath}/cleanup.sh
cat > ${CLEANUP_SCRIPT} << 'EOF'
#!/bin/bash

SCRIPT_DIR=`dirname $0` 
SCRIPT_DIR=`(cd ${SCRIPT_DIR} && echo $PWD)`
SCRIPT_NAME=`basename $0`

ECLIPSE_PATH=${SCRIPT_DIR}/eclipse
ECLIPSE_BIN=${ECLIPSE_PATH}/eclipse

WORKSPACE_PATH=${SCRIPT_DIR}/workspace/

PID=`ps -df | grep -v grep | grep /home/koubi/IDE/eclipse/eclipse | xargs | cut -d" " -f 2`

if [ "$PID" != "" ]; then 
	echo ""
	echo " ** Eclipse is found running (pid = $PID). Killing it."
	echo ""
	kill -9 $PID
fi


rm -f ${WORKSPACE_PATH}/.metadata/.lock
rm -f ${WORKSPACE_PATH}/.metadata/.log
rm -f ${WORKSPACE_PATH}/.metadata/.plugins/org.eclipse.core.resources/.span

if [ -d ${WORKSPACE_PATH}/.metadata/.plugins/org.eclipse.core.resources ]; then
	mv ${WORKSPACE_PATH}/.metadata/.plugins/org.eclipse.core.resources ${SCRIPT_DIR}/resources_bk
	
	echo ""
	echo " ** Eclipse will start. Close all tabs then close eclipse"
	echo ""
	read -p "[Press Enter] ..."

	${ECLIPSE_BIN}

	rm -rf ${WORKSPACE_PATH}/.metadata/.plugins/org.eclipse.core.resources
	mv ${SCRIPT_DIR}/resources_bk ${WORKSPACE_PATH}/.metadata/.plugins/org.eclipse.core.resources
fi

echo ""
echo " ** Cleanup done."
echo ""

exit 0

EOF
chmod +x ${CLEANUP_SCRIPT}

echo "####"
echo "#### done "
echo "####"

[ ! -z $JAVAFX_RESULT ] && echo "JavaFX : $JAVAFX_RESULT"
[ ! -z $WTP_RESULT ] && echo "Web Tools : $WTP_RESULT"
[ ! -z $PHOTRAN_RESULT ] && echo "Fortran : $PHOTRAN_RESULT"
[ ! -z $PTP_RESULT ] && echo "Parallel Tools : $PTP_RESULT"
[ ! -z $PTP_PRE_RESULT ] && echo "Parallel Tools (prereq) : $PTP_PRE_RESULT"
[ ! -z $TOMCAT_RESULT ] && echo "Tomcat : $TOMCAT_RESULT"
[ ! -z $FINDBUGS_RESULT ] && echo "Findbugs : $FINDBUGS_RESULT"
[ ! -z $ANYEDITTOOLS_RESULT ] && echo "Any Edit Tools : $ANYEDITTOOLS_RESULT"
[ ! -z $JAUTODOC_RESULT ] && echo "JAutoDoc : $JAUTODOC_RESULT"
[ ! -z $ECLEMMAJCC_RESULT ] && echo "Code Coverage : $ECLEMMAJCC_RESULT"
[ ! -z $GRECLIPSE_RESULT ] && echo "GreClipse : $GRECLIPSE_RESULT"
[ ! -z $GECOS_UI_RESULT ] && echo "Gecos UI : $GECOS_UI_RESULT"
[ ! -z $GECOS_SCRIPT_RESULT ] && echo "Gecos Script : $GECOS_SCRIPT_RESULT"
[ ! -z $JNIMAP_RESULT ] && echo "JNIMap : $JNIMAP_RESULT"
[ ! -z $CUP_LEX_RESULT ] && echo "Cup/Lex : $CUP_LEX_RESULT"
[ ! -z $TEXCLIPSE_RESULT ] && echo "TexClipse : $TEXCLIPSE_RESULT"
[ ! -z $EASYSHELL_RESULT ] && echo "EasyShell : $EASYSHELL_RESULT"
[ ! -z $SUBVERSIVE_RESULT ] && echo "SubVersive : $SUBVERSIVE_RESULT"
[ ! -z $SVN_RESULT ] && echo "SVN : $SVN_RESULT"
[ ! -z $GRADLE_RESULT ] && echo "Gradle : $GRADLE_RESULT"
[ ! -z $TMF_RESULT ] && echo "TMF : $TMF_RESULT"
[ ! -z $BASE_RESULT ] && echo "Base Setup : $BASE_RESULT"
[ ! -z $COLORTHEME_RESULT ] && echo "Color Themes : $COLORTHEME_RESULT"
[ ! -z $EASE_RESULT ] && echo "EASE : $EASE_RESULT"
[ ! -z $DLTK_RESULT ] && echo "DLTK : $DLTK_RESULT"
[ ! -z $TYCHO_RESULT ] && echo "Tycho : $TYCHO_RESULT"
[ ! -z $RELENG_RESULT ] && echo "Releng Tools : $RELENG_RESULT"



exit
##################################
##	END.
##################################

#archive:
	  
	echo ""
	echo " * Setup TMF"
	echo ""
	${ECLIPSE} -nosplash \
	  -application org.eclipse.equinox.p2.director \
	  -repository http://download.eclipse.org/modeling/tmf/xtext/updates/composite/releases/ \
	  -destination ${installationpath}/eclipse/ \
	  -installIU org.eclipse.xtext.sdk.feature.group \
	  -installIU org.eclipse.xtext.xbase.source.feature.group \
	  -installIU org.eclipse.xtext.xbase.feature.group \
	  -installIU org.eclipse.xtext.xbase.lib.source.feature.group \
	  -installIU org.eclipse.xtext.xbase.lib.feature.group \
	  -installIU org.eclipse.xtext.examples.source.feature.group \
	  -installIU org.eclipse.xtext.examples.feature.group \
	  -installIU org.eclipse.xtext.ui.source.feature.group \
	  -installIU org.eclipse.xtext.ui.feature.group \
	  -installIU org.eclipse.xtext.xtext.ui.source.feature.group \
	  -installIU org.eclipse.xtext.xtext.ui.feature.group \
	  -installIU org.eclipse.xtext.docs.feature.group \
	  -installIU org.eclipse.xtext.runtime.source.feature.group \
	  -installIU org.eclipse.xtext.runtime.feature.group \
	  -installIU org.eclipse.xtend.sdk.feature.group \
	  -installIU org.eclipse.emf.mwe2.runtime.sdk.feature.group \
	  -installIU org.eclipse.emf.mwe2.runtime.sdk.source.feature.group \
	  -installIU org.eclipse.emf.ecore.xcore.feature.group
